<?xml version="1.0"?>
<configuration>

  <configSections>
    <section name="apworks" type="Apworks.Config.ApworksConfigSection, Apworks"/>
  </configSections>

  <connectionStrings>
    <add name="EventDBConnectionString" connectionString="Data Source=.\SQLEXPRESS;Initial Catalog=TinyLibraryCQRS_EventDB;Integrated Security=True;Pooling=False;MultipleActiveResultSets=True;"/>
  </connectionStrings>

  <appSettings>
    <add key="EventBusMessageQueue" value=".\private$\TinyLibraryCQRS_EventBus"/>
    <add key="EventLogApplication" value="TinyLibraryCQRS"/>
  </appSettings>

  <apworks>
    <application provider="Apworks.Application.App, Apworks" />
    <objectContainer provider="Apworks.ObjectContainers.Unity.UnityObjectContainer, Apworks.ObjectContainers.Unity" initFromConfigFile="false" sectionName="" />
    <serializers>
      <eventSerializer provider="Apworks.Events.Serialization.DomainEventXmlSerializer, Apworks" />
      <snapshotSerializer provider="Apworks.Snapshots.Serialization.SnapshotXmlSerializer, Apworks" />
    </serializers>
    <generators>
      <sequenceGenerator provider="Apworks.Generators.SequentialIdentityGenerator, Apworks" />
      <identityGenerator provider="Apworks.Generators.SequentialIdentityGenerator, Apworks" />
    </generators>
    <handlers>
      <handler name="commandHandlerRegistration" kind="Command" sourceType="Assembly" source="TinyLibraryCQRS.CommandHandlers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
    </handlers>
    <exceptions>
      <exception type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" behavior="Direct">
        <handlers>
          <handler type="TinyLibraryCQRS.Infrastructure.GeneralExceptionHandler, TinyLibraryCQRS.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        </handlers>
      </exception>
    </exceptions>
    <interception>
      <interceptors>
        <interceptor name="exception" type="Apworks.Interception.ExceptionHandlingInterceptor, Apworks, Version=2.0.4259.25929, Culture=neutral, PublicKeyToken=8dd847f02992a80e" />
      </interceptors>
      <contracts>
        <contract type="TinyLibraryCQRS.Infrastructure.TinyLibraryCQRSDomainRepository, TinyLibraryCQRS.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
          <methods>
            <method signature="System.Void Commit()">
              <interceptorRefs>
                <interceptorRef name="exception" />
              </interceptorRefs>
            </method>
          </methods>
        </contract>
        <contract type="TinyLibraryCQRS.Model.Services.IUserAccountBookTransferService, TinyLibraryCQRS.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
          <methods>
            <method signature="System.Void BorrowBookToUser(TinyLibraryCQRS.Model.UserAccount, TinyLibraryCQRS.Model.Book)">
              <interceptorRefs>
                <interceptorRef name="exception" />
              </interceptorRefs>
            </method>
            <method signature="System.Void ReturnBookFromUser(TinyLibraryCQRS.Model.UserAccount, TinyLibraryCQRS.Model.Book)">
              <interceptorRefs>
                <interceptorRef name="exception" />
              </interceptorRefs>
            </method>
          </methods>
        </contract>
      </contracts>
    </interception>
  </apworks>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
 <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>
  
</configuration>
