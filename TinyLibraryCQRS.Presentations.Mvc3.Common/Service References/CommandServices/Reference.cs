//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TinyLibraryCQRS.Presentations.Mvc3.Common.CommandServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDataObject", Namespace="http://schemas.datacontract.org/2004/07/TinyLibraryCQRS.Services.CommandServices." +
        "CommandDataObjects")]
    [System.SerializableAttribute()]
    public partial class AddressDataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFServiceFault", Namespace="http://schemas.datacontract.org/2004/07/TinyLibraryCQRS.Infrastructure")]
    [System.SerializableAttribute()]
    public partial class WCFServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommandServices.ICommandService")]
    public interface ICommandService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/RegisterUserAccount", ReplyAction="http://tempuri.org/ICommandService/RegisterUserAccountResponse")]
        void RegisterUserAccount(string userName, string password, string displayName, string email, string contactPhone, TinyLibraryCQRS.Presentations.Mvc3.Common.CommandServices.AddressDataObject contactAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/RegisterAdminAccount", ReplyAction="http://tempuri.org/ICommandService/RegisterAdminAccountResponse")]
        void RegisterAdminAccount(string userName, string password, string displayName, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/AddBook", ReplyAction="http://tempuri.org/ICommandService/AddBookResponse")]
        void AddBook(string title, string author, string description, string isbn, int pages, int inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/UpdateBook", ReplyAction="http://tempuri.org/ICommandService/UpdateBookResponse")]
        void UpdateBook(long id, string title, string author, string description, string isbn, int pages, int inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/UpdateUserAccount", ReplyAction="http://tempuri.org/ICommandService/UpdateUserAccountResponse")]
        void UpdateUserAccount(long id, string displayName, string email, string contactPhone, TinyLibraryCQRS.Presentations.Mvc3.Common.CommandServices.AddressDataObject contactAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/BorrowBookToUser", ReplyAction="http://tempuri.org/ICommandService/BorrowBookToUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TinyLibraryCQRS.Presentations.Mvc3.Common.CommandServices.WCFServiceFault), Action="http://tempuri.org/ICommandService/BorrowBookToUserWCFServiceFaultFault", Name="WCFServiceFault", Namespace="http://schemas.datacontract.org/2004/07/TinyLibraryCQRS.Infrastructure")]
        void BorrowBookToUser(long bookId, long userAccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/ReturnBookFromUser", ReplyAction="http://tempuri.org/ICommandService/ReturnBookFromUserResponse")]
        void ReturnBookFromUser(long bookId, long userAccountId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandServiceChannel : TinyLibraryCQRS.Presentations.Mvc3.Common.CommandServices.ICommandService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandServiceClient : System.ServiceModel.ClientBase<TinyLibraryCQRS.Presentations.Mvc3.Common.CommandServices.ICommandService>, TinyLibraryCQRS.Presentations.Mvc3.Common.CommandServices.ICommandService {
        
        public CommandServiceClient() {
        }
        
        public CommandServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommandServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterUserAccount(string userName, string password, string displayName, string email, string contactPhone, TinyLibraryCQRS.Presentations.Mvc3.Common.CommandServices.AddressDataObject contactAddress) {
            base.Channel.RegisterUserAccount(userName, password, displayName, email, contactPhone, contactAddress);
        }
        
        public void RegisterAdminAccount(string userName, string password, string displayName, string email) {
            base.Channel.RegisterAdminAccount(userName, password, displayName, email);
        }
        
        public void AddBook(string title, string author, string description, string isbn, int pages, int inventory) {
            base.Channel.AddBook(title, author, description, isbn, pages, inventory);
        }
        
        public void UpdateBook(long id, string title, string author, string description, string isbn, int pages, int inventory) {
            base.Channel.UpdateBook(id, title, author, description, isbn, pages, inventory);
        }
        
        public void UpdateUserAccount(long id, string displayName, string email, string contactPhone, TinyLibraryCQRS.Presentations.Mvc3.Common.CommandServices.AddressDataObject contactAddress) {
            base.Channel.UpdateUserAccount(id, displayName, email, contactPhone, contactAddress);
        }
        
        public void BorrowBookToUser(long bookId, long userAccountId) {
            base.Channel.BorrowBookToUser(bookId, userAccountId);
        }
        
        public void ReturnBookFromUser(long bookId, long userAccountId) {
            base.Channel.ReturnBookFromUser(bookId, userAccountId);
        }
    }
}
